[global]
zone_id = 1                  ; 逻辑大区ID
zone_start_time = 1466391600 ; 开服时间

group_id = 1                 ; 部署分组ID，和生成BUS ID有关，如果需要一台机器上部署多组环境，每组环境这里需要不一样
group_step = 65536           ; 0x10000, 生成BUS ID时执行 += 分组ID*group_step
type_step = 256              ; 0x100, 生成BUS ID时执行 += 进程类型ID*type_step
port_offset = 0              ; 全局端口号偏移，如果需要一台机器上部署多组环境，每组环境这里需要不一样，建议间隔是type_step*instance num，间隔2000可支撑7每组服务个实例

log_dir = ../log
# 逻辑日志级别(越大级别越低，DEBUG=6)
log_level = debug               ; (disable/disabled, fatal, error, warn/warning, info, notice, debug)

[atsystem]
stdout = true
shm_key_offset = 0                ; 共享内存Key偏移量，用于同机器部署多个group时错开共享内存key
shm_key_pool = 301989888          ; 0x12000000, 共享内存通道起始KEY，如果需要一台机器上部署多组环境，每组环境这里需要不一样
shm_channel_size = 16777216       ; 16MB 开发环境可以设成2MB以减少内存消耗，发布环境请改成16MB或8MB
iostream_channel_size = 2097152   ; 2MB
listen_port = 12000               ; 网络通道起始端口
hostname =                        ; 主机名称，每个物理机名称必须唯一，留空则系统自动取hostname
# unix_sock_dir = /tmp/atapp/SHA1 ; Unix sock地址的公共目录（如果支持Unix socks才有效）

[atservice]
etcd = 0
atproxy = 1
atgateway = 2
echosvr = 33
loginsvr = 35
gamesvr = 36

[etcd]
hosts = http://127.0.0.1:2379       ; etcd服务入口地址
path = /atapp/services              ; etcd服务的atapp上报数据的写入前缀
authorization = ""                  ; etcd 认证字段, username:password
cluster.update_interval = 5m        ; etcd服务集群刷新间隔（5分钟）
cluster.retry_interval = 1m         ; etcd服务集群重试间隔（1分钟）
keepalive.timeout = 31s             ; 保活超时时间（31秒，这里设置成3次保活时间+1秒，这样可以容忍2次丢失）
keepalive.ttl = 10s                 ; 保活租约续期间隔（10秒）
request.timeout = 15s               ; etcd请求超时时间（15秒）
init.timeout = 5s                   ; 初始化超时时间（5秒）
watcher.retry_interval = 15s        ; 观察者重试间隔（15秒）
watcher.request_timeout = 30m       ; 观察者请求超时时间，每过一段时间重新发起请求（etcd默认认证Token超时大约是不到1小时，所以设为30分钟以便自动续期）
report_alive.by_id = true           ; 按server id的保活上报
report_alive.by_type = true         ; 按server type的保活上报
report_alive.by_name = true         ; 按server name的保活上报

[db]
cluster_default_host = 127.0.0.1:7001-7006
single_default_host = 127.0.0.1:6379


[gperftools]
profile_dir = profile ; 相对于安装目录
malloc = false ; 开启tcmalloc
cpu_profile = cpu.prof ; 开启cpu性能分析，并设置分析结果文件名
heap_check =  ;  [minimal, normal, strict, draconian] 内存泄露检测
heap_profile =  ;  是否开启堆内存泄露检测并设置分析结果文件名 (例如： heap.profile 注意: 堆性能监控会降低内存分配效率)


[jemalloc]
profile_dir = profile ; 相对于安装目录
malloc = true ; 开启jemalloc
heap_check = 0 ;  [2^n字节] 内存泄露检测, 比如 16
heap_profile = ;  是否开启堆内存泄露检测并设置分析结果文件名 (例如： heap.profile 注意: 堆性能监控会降低内存分配效率)
other_malloc_conf = stats_print:false,tcache:false

[valgrind]
profile_dir = profile ; 相对于安装目录
tool = ; memcheck, cachegrind, callgrind, helgrind etc. see man valgrind
option = 

[server.etcd]
data_dir    = ../data
wal_dir     =                                           ; left empty we will use data_dir/../wal
peer_port   = 4380
client_port = 2379
cors =                                                  ; comma-separated whitelist of origins for CORS (corss-origin resource sharing)
init_cluster_token = a49ef75ea4a2d3576d3bd7e2f987270e
number = 0

[server.atproxy]
; ================ atproxy服务器配置 ================
number = 1
port = 10100
children_mask = 16

install_prefix = atframe/atproxy

[server.atgateway]
default_port = 9000                        ; base port if not specified
install_prefix = atframe/atgateway

index_type_number = 5                      ; atgameway's port = server index * index_type_number + index_map_<server name> + base
index_map_echosvr = 0
index_map_gamesvr = 1
index_map_loginsvr = 2
[server.echosvr]
number = 1

atgateway_listen_max_client = 65535
atgateway_listen_backlog = 128
atgateway_send_buffer_size = 1048576       ; 1MB send buffer limit
atgateway_reconnect_timeout = 180          ; reconnect timeout
atgateway_first_idle_timeout = 10          ; first idle timeout

etcd.report_alive.by_id = false
etcd.report_alive.by_type = false
etcd.report_alive.by_name = false
etcd.report_alive.by_tag = echosvr

[server.loginsvr]
number = 1

atgateway_listen_max_client = 65535
atgateway_listen_backlog = 128
atgateway_send_buffer_size = 1048576       ; 1MB send buffer limit
atgateway_reconnect_timeout = 180          ; reconnect timeout
atgateway_first_idle_timeout = 10          ; first idle timeout

; gamesvr_addrs = 

[server.gamesvr]
number = 2

atgateway_listen_max_client = 65535
atgateway_listen_backlog = 128
atgateway_send_buffer_size = 1048576       ; 1MB send buffer limit
atgateway_reconnect_timeout = 180          ; reconnect timeout
atgateway_first_idle_timeout = 10          ; first idle timeout
